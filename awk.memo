######Startmemoof awk.memo #######
######Start awk.memo #######

column to row support multiple column
https://stackoverflow.com/questions/9534744/how-to-transfer-the-data-of-columns-to-rows-with-awk
https://ideone.com/F1TJm

awk '{
       for (f = 1; f <= NF; f++) { a[NR, f] = $f } 
     }
     NF > nf { nf = NF }
     END {
       for (f = 1; f <= nf; f++) {
           for (r = 1; r <= NR; r++) {
               printf a[r, f] (r==NR ? RS : FS)
           }
       }
    }' YOUR_text



###concate field with special char
$> awk -F ',' '{printf "%s--->%s\n", $4,$6}' ssh-cfg
404 Not Found--->50010
404 Not Found--->50020
404 Not Found--->50030
404 Not Found--->50040
404 Not Found--->50050
404 Not Found--->50060
200 OK--->50070
1 200--->50080


###merge mulitline to one
#awk '{if(NR%3!=0)ORS=" ";else ORS="\n"}1' 5.txt
1 2 3
a b c
#

shell~:> cat form.letter 
Host $1,Hostname $2,User Achilles,Port $3,IdentityFile ~/.ssh/ssh-privity-key

shell~:> cat replace.cmd 
BEGIN {FS = "|"
                   while (getline <"form.letter")
                   line[++n] = $0
   }
 NR<1{next}{for (i = 1; i <= n; i++) {
                   s = line[i]       
                   for (j = NF; j >= 1; j--) 
                              gsub("\\$"j, $j, s)
                   print s
           }
    print ""
   }

shell~:> cat replace.value 
cd-51-vm|192.168.10.51|22
cd-52-vm|192.168.10.52|22
cd-53-vm|192.168.10.53|22
cd-54-vm|192.168.10.54|22
cd-55-vm|192.168.10.55|22
shell~:> cat auto-config-vpn-readme 

awk -f replace.cmd replace.value |sed  's/,/\n/g'     #####generate ssh config file,refer to form.letter

#####

###nginx findo out most access ip 
awk '{
Ip[$1]++;
}
END{
for (var in Ip)
print var, "access", Ip[var]," times"
}
' nginxlog|sort -k 3 -n

###nginx findo out most access ip 

####Using Shell Variables in Programs 
https://www.gnu.org/software/gawk/manual/html_node/Using-Shell-Variables.html

$>cat awk-use-bash-var.sh 

#!/bin/bash
op_file=a1
printf "Enter search pattern: "
read pattern
awk -v pat="$pattern" '$0 ~ pat { nmatches++ }
       END { print nmatches, "found" }' "$op_file"

#cat a1 
able
can
able to
cannot
might

#sh awk-use-bash-var.sh 
Enter search pattern: can
2 found

#sh awk-use-bash-var.sh 
Enter search pattern: migh
1 found

#sh awk-use-bash-var.sh 
Enter search pattern: cannot
1 found

####Using Shell Variables in Programs 


##############awk vlookup replace by array#############
$> cat array-replace.awk

NR==FNR{
        temp[$1]=$2
        }

NR!=FNR{
        for(j=1;j<=NF;j++){           ###this do working where j>=10
              if($j~/^var/)           ###start with var field
                   $j = temp[$j]      ###vlookup replace
              s=$0                    ###result write back
        }
              print s
    }        


$> cat array-replace-keys
var-wildcode 0.0.0.7
var-network 192.168.20.0
var-mask 255.255.255.0
var-public-ip 1.2.3.4
var-privity-ip 192.168.20.100


$> cat array-replace-templete 
my pub-int var-public-ip var-mask var-wildcode 
my  privity-ip var-privity-ip var-mask  
privity-ip var-privity-ip var-wildcode

$> awk -f array-replace.awk array-replace-keys array-replace-templete 
my pub-int 1.2.3.4 255.255.255.0 0.0.0.7
my privity-ip 192.168.20.100 255.255.255.0
privity-ip 192.168.20.100 0.0.0.7

##############awk vlookup replace by array#############


####debug
--10 centos 7 not work

--20 operation
$>awk -D -f some-file.awk operation-fiel
gawk> watch s
Watchpoint 1: s
gawk> run
Starting program: 
Stopping in Rule ...
Watchpoint 1: s
  Old value: untyped variable
  New value: " rule 10 permit ip source #4 #5 destination #10"
main() at `replace.awk':7
7                          for (j = 1; j <= NF; j++){
gawk> n
8                                  gsub("#"j, $j, s)
gawk> 
Watchpoint 1: s
  Old value: " rule 10 permit ip source #4 #5 destination #10"
  New value: " rule 10 permit ip source #4 #5 destination -R10"
main() at `replace.awk':7
7                          for (j = 1; j <= NF; j++){
gawk> 
8                                  gsub("#"j, $j, s)
gawk> quit
The program is running. Exit anyway (y/n)? y


####debug


######vlookup#################
--10 link
https://unix.stackexchange.com/questions/257002/vlookup-work-in-awk-on-linux

--20 requirement
file1:
4,abc
3,xyz
5,fut
6,gfd

file2:
gfd,2.3
xyz,4.5
abc,6.7
fut,3.2

fil3:(result)
4,6.7
3,4.5
5,3.2
6,2.3

--30 way 1
With join:

join -t, -1 2 -2 1 -o 1.1,2.2 <(sort -t, -k2 file1) <(sort -t, -k1 file2)

    -t, set delimiter to ,.
    -1 2 the first files join field is the second one.
    -2 1 the second files join field is the first one.
    -o 1.1,2.2 the output format
    <(sort ...) join need input files, which are sorted on the join field.

--30 way 2

FNR==NR{
    var[$2]=$1
}
FNR!=NR{
    print(var[$1]","$2)
}

call:
awk -F, -f script.awk file1 file2
######vlookup#################


####warp awk in shell########
--10 $1 is shell argv1,$2 is shell argv2
$> cat segw.sh 
awk 'BEGIN {RS = ""} /'$1'/' $2 

--20 seperate is space line 
$> cat templete.bak 
Interface:g0/0
IP:192.168.1.1

Mask:255.255.255.0
GW:172.16.1.2

--30 call and result,$1 is IP,$2 is templete.bak
$> ./segw.sh IP templete.bak 
Interface:g0/0
IP:192.168.1.1

####warp awk in shell########



###replace newline enter to space####
link:
https://stackoverflow.com/questions/1251999/how-can-i-replace-a-newline-n-using-sed

#10 initial
$>cat templete.bak 
Interface:g0/0
IP:192.168.1.1
Mask:255.255.255.0
GW:172.16.1.2

#20 way 1 the best
$> awk -F ":" '{print $1}' templete.bak |sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g'
Interface IP Mask GW

--or--
#20 way 2
$> awk -F ":" '{print $1}' templete.bak |sed ':a;N;$!ba;s/\n/ /g'
Interface IP Mask GW

Explanation:

    Create a label via :a.
    Append the current and next line to the pattern space via N.
    If we are before the last line, branch to the created label $!ba ($! means not to do it on the last line as there should be one final newline).
    Finally the substitution replaces every newline with a space on the pattern space (which is the whole file).


###replace newline enter to space####


#####awk form-letter with given value####

User~/> cat replace.value 

Fld1|Fld2|Fld3
Alice|Bob|Cindy
Zoo|Yard|Xeon

User~/> cat replace.cmd 
 BEGIN {FS = "|"
                   while (getline <"form.letter")
                   line[++n] = $0
   }
 NR<2{next}{for (i = 1; i <= n; i++) {   //skip first line 
                   s = line[i]          //read line of form.letter to s
                   for (j = NF; j >= 1; j--)  //read field from replace.value in order,reverse order Must.
                              gsub("\\$"j, $j, s)
                   print s
           }
   }

User~/> cat form.letter 
This is a form letter.
The first field is $1, the second $2, the third $3.
The third is $3, second is $2, and first is $1.

User~/> awk -f replace.cmd replace.value 

This is a form letter.
The first field is Alice, the second Bob, the third Cindy.
The third is Cindy, second is Bob, and first is Alice.

This is a form letter.
The first field is Zoo, the second Yard, the third Xeon.
The third is Xeon, second is Yard, and first is Zoo.


#####awk form-letter with given value####


{
if($0 ~"Directory\ of")  #根据是否含“Directory of”判断是否是包含目录的那一行
        {
f=""         
for(i=3;i<=NF;i++) 
f=f " " $i    
        }#以上为把完整的路径赋给变量f
else
        {
printf("%s\\",f) #打印完整路径，并跟一个\
for(i=5;i<=NF;i++)printf("%s ",$i) #打印完整文件名称,注意%s后的空格,用于输出文件名中的空格.
                {
                printf("|") #打印界定符，方便EXCEL导入
                printf("%s",$4)  #打印所有者
                printf("|") #打印界定符，方便EXCEL导入
                print $3 #打印文件大小
                }
        }
}






awk输出全路径文件及文件大小.txt
dir  c: /s |grep -v "<DIR>|字节$|^$"| awk -v f="" -f 1.txt #-v必须紧随在AWK后，不然会错


下面是1.txt 的内容
{
if($0 ~".*的目录$")         #~是包含的操作方法

        #自定义变量f不需要加前缀$;""""(也可以是空格如$1 " " $2)是字符串之间的连接操作符
        {
f=""         #变量f赋初值，一定要在写在这里
for(i=1;i<NF;i++) #路径的值赋给变量f
f=f " " $i    #路径的值赋给变量f
        }
else
        {
printf("%s\\",f) #输出文件完整路径（包括空格） 
for(i=4;i<=NF;i++)printf("%s ",$i) #接着上面的输出文件完整名称（包括空格） 
print $3  #输出字节数
printf("\n")  #换行
        }
}


结果象这样（注意路径和文件名内部的空格都保留的哦^_^）
 C:\Documents and Settings\All Users\Application Data\Microsoft\OFFICE\DATAOPA11.BAK 8,200

 C:\Documents and Settings\All Users\Application Data\Microsoft\OFFICE\DATAopa11.dat 8,206

 C:\Documents and Settings\All Users\Application Data\Microsoft\USMTiconlib.dll 2,560

 C:\Documents and Settings\All Users\Application Data\Windows Genuine Advantage\Datadata.dat 3,104

 C:\Documents and Settings\All Users\桌面Google Chrome.lnk 1,723

 C:\Documents and Settings\All Users\「开始」菜单Windows Update.lnk 1,411

 C:\Documents and Settings\All Users\「开始」菜单Windows Catalog.lnk 398

######End awk.memo #######
######Endmemoof awk.memo #######
