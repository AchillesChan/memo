######Startmemoof redis.memo #######
######Start redis.memo #######
https://www.w3schools.io/nosql/redis-backup-restore/#:~:text=How%20to%20take%20backup%20and%20restore%20Redis%20database.,the%20save%20or%20bgsave%20command%20to%20take%20backup

Redis下载安装

0:insatll dependent
yum install gcc-c++ tcl wget

1:官方站点: redis.io 下载最新版或者最新stable版
2:解压源码并进入目录
3: 不用configure
4: 直接make
(如果是32位机器make 32bit)


注:易碰到的问题,时间错误.
原因: 源码是官方configure过的,但官方configure时,生成的文件有时间戳信息,
Make只能发生在configure之后,
如果你的虚拟机的时间不对,比如说是2012年
解决: date -s ‘yyyy-mm-dd hh:mm:ss’ 重写时间
再clock -w 写入cmos




5: 可选步骤: make test 测试编译情况
(可能出现: need tcl >8.4这种情况, yum install tcl)


6: 安装到指定的目录,比如/usr/local/redis
make PREFIX=/usr/local/redis install
注: PREFIX要大写


7: make install之后,得到如下几个文件
redis-benchmark 性能测试工具
redis-check-aof 日志文件检测工(比如断电造成日志损坏,可以检测并修复)
redis-check-dump 快照文件检测工具,效果类上
redis-cli 客户端
redis-server服务端


8: 启动与连接
/path/to/redis/bin/redis-server ./path/to/conf-file
例:[root@localhost redis]# ./bin/redis-server ./redis.conf


连接: 用redis-cli
#/path/to/redis/bin/redis-cli [-h localhost -p 6379 ]


9: 让redis以后台进程的形式运行
编辑conf配置文件,修改如下内容;
daemonize yes

10: use blank password(not recommand)

protected-mode yes
requirepass "your-password"

login path/to/redis/bin/redis-cli [-h localhost -p 6379 ]
>auth your-password

11:  
redis-cli
 >set name david 
OK
 >get name
 "david"
 >keys *    ###get all keys
12: on boot 
Centos 6:
echo "/path/2/redis-server /path/2/redis-conf" >>/etc/rc.local
or
echo "@reboot    root     /path/2/redis-server /path/2/redis-conf" >>/etc/crontab

Centos7
opt:
   
     sysctl -w net.core.somaxconn=65535
    sysctl -w vm.overcommit_memory=1

$> cat /usr/lib/systemd/system/redis.service 
###PATT NEED cp redis.conf to /etc/
[Unit]
Description=redis
After=network.target
[Service]
WorkingDirectory=/usr/local/redis
ExecStart=/usr/local/redis/src/redis-server    
User=root                                                                                                                                                                                 
[Install]
WantedBy=multi-user.target

$> systemctl daemon-reload && systemctl enable redis && systemctl start redis

13: security
redis.conf
a: bind some-specfic ip and port
b: set protected-mode 
c: rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52
d: or disable command rename-command CONFIG ""



###error handle####
MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.

In case you encounter the error and some important data cannot be discarded on the running redis instance (problems with permissions for the rdb file or its directory incorrectly, or running out of disk space), you can always redirect the rdb file to be written somewhere else.

Using redis-cli, you can do something like this:

CONFIG SET dir /tmp/some/directory/other/than/var  ====here is solution
CONFIG SET dbfilename temp.rdb                     ===here is solution
After this, you might want to execute a BGSAVE command to make sure that the data will be written to the rdb file. Make sure that when you execute INFO, bgsave_in_progress is already 0 (either the operation is successful or there is an error encountered). After that, you can now start backing up the generated rdb file somewhere safe.

####backup redis
#key redis.conf 
#dbfilename dump.rdb
#dir ./
#appendonly yes
#appendfilename "appendonly.aof"
#appendfsync everysec
#no-appendfsync-on-rewrite no

#
#
#!/bin/sh

if [ ! -d "/data/backup/redis/" ]; then
  mkdir /data/backup/
  mkdir /data/backup/redis/
fi

DIR=`cat /usr/local/redis/redis.conf |grep '^dir '|cut -d' ' -f2`

redis-cli bgsave

cp $DIR/dump.rdb /data/backup/redis/dump.$(hostname).$(date +%Y_%m%d_%H%M).rdb
cp $DIR/appendonly.aof /data/backup/redis/appendonly.$(hostname).$(date +%Y_%m%d_%H%M).aof
####backup redis




----------grafana Prometheus安装 
wget https://github.com/prometheus/prometheus/releases/download/v2.1.0/prometheus-2.1.0.linux-amd64.tar.gz

tar -zxvf prometheus-2.1.0.linux-amd64.tar.gz -C  /opt/prometheus --strip-components=1
cd /opt/Prometheus
vim /opt/prometheus/prometheus.yml

- job_name: 'redis_exporter'
   -targets: ['lan-ip:9122']
./prometheus --config.file=prometheus.yml
启动
#./prometheus --config.file=prometheus.yml
访问地址localhost:9090




---------Grafana安装
wget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana-4.6.3-1.x86_64.rpm

sudo yum localinstall grafana-4.6.3-1.x86_64.rpm
/usr/sbin/grafana-server --config=/etc/grafana/grafana.ini --homepath "/usr/share/grafana"
访问地址localhost:3000 admin:admin
http://server:3000 
user：admin
pass：admin

DATA SOURCE-->TYPE "PROMETHEUS" -->URL "HTTP://LOCALHOST:9090" -->ACCESS "PROXY"-->SAVE & TEST -->OK


-----------Prometheus 和 Grafana 对接
wget https://github.com/oliver006/redis_exporter/releases/download/v0.15.0/redis_exporter-v0.15.0.linux-amd64.tar.gz
# tar -zxvf redis_exporter-v0.15.0.linux-amd64.tar.gz  /opt/prometheus_exporters --strip-components=1
#wget https://github.com/prometheus/node_exporter/releases/download/v0.15.2/node_exporter-0.15.2.linux-amd64.tar.gz
#tar -zxvf node_exporter-0.15.2.linux-amd64.tar.gz /opt/prometheus_exporters --strip-components=1
启动
#cd  /opt/prometheus_exporters
#./node_exporter & 
#./redis_exporter -redis.addr LAN-IP:6379,LAN-IP2:6379  -web.listen-address 0.0.0.0:9122 & ###MONITOR IP AND IP1 SERVER(2 VMS)




-----------导入Redis监控json模板
wget  https://grafana.com/api/dashboards/763/revisions/1/download
GRAFANA-WEB-->DASHBOARDS-->NEW-->IMPORT-->upload .json file-->prom "prometheus"-->import

###error handle####
######End redis.memo #######
######Endmemoof redis.memo #######
