https://www.geeksforgeeks.org/how-to-create-an-app-in-django/


$> django-admin startapp projectApp
or 
$> python manage.py startapp projectApp

[root@c1 projectName]# tree 
.
├── db.sqlite3
├── manage.py
├── projectApp
│   ├── admin.py
│   ├── apps.py
│   ├── __init__.py
│   ├── migrations
│   │   ├── __init__.py
│   │   └── __pycache__
│   │       └── __init__.cpython-39.pyc
│   ├── models.py
│   ├── __pycache__
│   │   ├── admin.cpython-39.pyc
│   │   ├── apps.cpython-39.pyc
│   │   ├── __init__.cpython-39.pyc
│   │   ├── models.cpython-39.pyc
│   │   ├── urls.cpython-39.pyc
│   │   └── views.cpython-39.pyc
│   ├── tests.py
│   ├── urls.py
│   └── views.py
└── projectName
    ├── asgi.py
    ├── __init__.py
    ├── __pycache__
    │   ├── __init__.cpython-39.pyc
    │   ├── settings.cpython-39.pyc
    │   ├── urls.cpython-39.pyc
    │   ├── views.cpython-39.pyc
    │   └── wsgi.cpython-39.pyc
    ├── settings.py
    ├── urls.py
    ├── views.py
    └── wsgi.py

6 directories, 28 files

[root@c1 projectName]# cat projectApp/urls.py 
from django.urls import path
#now import the views.py file into this code
from . import views
urlpatterns=[
  path('',views.index),
]
[root@c1 projectName]# cat projectApp/views.py 
#from django.shortcuts import render
from django.http import HttpResponse
 
 
def index(request):
  return HttpResponse("App index")
# Create your views here.
[root@c1 projectName]# cat projectName/settings.py 
... ...
DEBUG = FALSE

ALLOWED_HOSTS = [ '127.0.0.1',
    '192.168.6.1',
]


# Application definition

INSTALLED_APPS = [
     ... ...
     'django.contrib.staticfiles',
    'projectApp'   ####add app here
]
... ...

ROOT_URLCONF = 'projectApp.urls'   ###add App name here
#ROOT_URLCONF = 'projectName.urls'
... ...


[root@c1 projectName]# cat projectName/urls.py 
... ...
from django.urls import include         ###add include
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include("projectApp.urls")),   ###add include
]


# python3  manage.py runserver 0:8000
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
April 18, 2022 - 13:19:38
Django version 4.0.3, using settings 'projectName.settings'
Starting development server at http://0:8000/
Quit the server with CONTROL-C.


# curl 127.0.0.1:8000
App index

##########







https://www.tutorialspoint.com/django/index.htm
https://www.geeksforgeeks.org/how-to-create-a-basic-project-using-mvt-in-django/
https://www.geeksforgeeks.org/django-project-mvt-structure/
https://www.javatpoint.com/django-url-mapping

https://docs.djangoproject.com/en/3.1/intro/tutorial01/ ###worked
file://mydjango-site-with-docker/mysite
file://mydjango-site-with-docker/polls


$> yum -y install python3.x86_64
$> python3 -m pip install Django==2.1.2
$> python3 -m django --version
$> ln -s /usr/local/bin/django-admin /bin/django-admin
$> django-admin startproject mysite
$> python3 manage.py runserver 0:8000

###create new app
$ stop python3 django first ???
$ python3 manage.py startapp polls

$ cat polls/views.py     ###app view,one-to-one map
from django.http import HttpResponse


def index(request):
    return HttpResponse("Hello, world. You're at the polls index.")


$cat polls/urls.py      ###app urls,one-to-one map

from django.urls import path

from . import views

urlpatterns = [
    path('', views.index, name='index'),
    ]

$ cat mysite/urls.py             ###project urls.py not app urls,summary app urls here
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('polls/', include('polls.urls')),
    ... ...
    path('admin/', admin.site.urls),
        ]

$> python3 manage.py makemigrations 
$> python3 manage.py migrate
$> python3 manage.py check
$> python3 manage.py test
$> python3 manage.py runserver 0:8000

$> curl http://localhost:8000/polls/
Hello, world. You're at the polls index.


###connect to mysql
https://studygyaan.com/django/how-to-use-mysql-database-with-django-project
http://www.marinamele.com/taskbuster-django-tutorial/install-and-configure-mysql-for-django
$> yum install python3-devel 
$> pip3 install PyMySQL
$> pip3 install mysqlclient   ##not need
$> vim settings.py
# Database,replace old sqlite segment

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'DB_name',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'USER': 'DB_user',
        'PASSWORD': 'DB_password',
    }
}

$> python3 manage.py makemigrations 
$> python3 manage.py migrate
$> python3 manage.py check
$> python3 manage.py test
Creating test database for alias 'default'...
System check identified no issues (0 silenced).

----------------------------------------------------------------------
Ran 0 tests in 0.000s

OK
Destroying test database for alias 'default'...

