https://smallstep.com/blog/everything-pki/
https://goteleport.com/blog/ssh-jump-server/
https://goteleport.com/blog/how-to-ssh-properly/
https://sollove.com/2013/03/03/my-first-5-minutes-on-a-server-or-essential-security-for-linux-servers/
https://www.fail2ban.org/wiki/index.php/MANUAL_0_8#General_settings
https://www.redhat.com/sysadmin/protect-systems-fail2ban
https://businessinsights.bitdefender.com/technical-advisory-zero-day-critical-vulnerability-in-log4j2-exploited-in-the-wild
https://www.sonarqube.org/features/security/  ###code review
ttps://owasp.org/www-community/Source_Code_Analysis_Tools
https://rushter.com/blog/detecting-sql-injections-in-python/
https://security-code-scan.github.io/
https://github.com/sqlmapproject/sqlmap/wiki/Usage   ###sql injection check
https://madaidans-insecurities.github.io/guides/linux-hardening.html
https://elatov.github.io/2017/06/install-lynis-and-fix-some-suggestions/
https://linux-audit.com/lynis-3-major-release/
https://www.liquidweb.com/kb/lynis-a-security-auditing-tool-for-linux/
https://opensource.com/article/20/8/linux-lynis-security
https://cisofy.com/documentation/lynis/get-started/

https://www.softwaretestinghelp.com/sql-injection-how-to-test-application-for-sql-injection-attacks/
https://www.guru99.com/learn-sql-injection-with-practical-example.html
wget https://github.com/sqlmapproject/sqlmap/zipball/master && unzip master && cd sqlinjast-master
./sqlmap.py -a --batch  -u http://foo.com/member?key= --dbms mysql



https://github.com/f0rb1dd3n/Reptile       ####Rootkit 

https://github.com/anti-ddos/Anti-DDOS/blob/master/anti-ddos.sh
https://javapipe.com/blog/iptables-ddos-protection/    ######****need check
Anti-DDoS Kernel Settings (sysctl.conf)
kernel.printk = 4 4 1 7
kernel.panic = 10
kernel.sysrq = 0
kernel.shmmax = 4294967296
kernel.shmall = 4194304
kernel.core_uses_pid = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
vm.swappiness = 20
vm.dirty_ratio = 80
vm.dirty_background_ratio = 5
fs.file-max = 2097152
net.core.netdev_max_backlog = 262144
net.core.rmem_default = 31457280
net.core.rmem_max = 67108864
net.core.wmem_default = 31457280
net.core.wmem_max = 67108864
net.core.somaxconn = 65535
net.core.optmem_max = 25165824
net.ipv4.neigh.default.gc_thresh1 = 4096
net.ipv4.neigh.default.gc_thresh2 = 8192
net.ipv4.neigh.default.gc_thresh3 = 16384
net.ipv4.neigh.default.gc_interval = 5
net.ipv4.neigh.default.gc_stale_time = 120
net.netfilter.nf_conntrack_max = 10000000
net.netfilter.nf_conntrack_tcp_loose = 0
net.netfilter.nf_conntrack_tcp_timeout_established = 1800
net.netfilter.nf_conntrack_tcp_timeout_close = 10
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 10
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 20
net.netfilter.nf_conntrack_tcp_timeout_last_ack = 20
net.netfilter.nf_conntrack_tcp_timeout_syn_recv = 20
net.netfilter.nf_conntrack_tcp_timeout_syn_sent = 20
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 10
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.ip_local_port_range = 1024 65000
net.ipv4.ip_no_pmtu_disc = 1
net.ipv4.route.flush = 1
net.ipv4.route.max_size = 8048576
net.ipv4.icmp_echo_ignore_broadcasts = 1
net.ipv4.icmp_ignore_bogus_error_responses = 1
net.ipv4.tcp_congestion_control = htcp
net.ipv4.tcp_mem = 65536 131072 262144
net.ipv4.udp_mem = 65536 131072 262144
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.udp_rmem_min = 16384
net.ipv4.tcp_wmem = 4096 87380 33554432
net.ipv4.udp_wmem_min = 16384
net.ipv4.tcp_max_tw_buckets = 1440000
net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_max_orphans = 400000
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_ecn = 2
net.ipv4.tcp_fin_timeout = 10
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 10
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.ip_forward = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.all.rp_filter = 1



The Complete IPtables Anti-DDoS Rules
If you donâ€™t want to copy & paste each single rule we discussed in this article, you can use the below ruleset for basic DDoS protection of your Linux server.

### 1: Drop invalid packets ###
/sbin/iptables -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP

### 2: Drop TCP packets that are new and are not SYN ###
/sbin/iptables -t mangle -A PREROUTING -p tcp ! --syn -m conntrack --ctstate NEW -j DROP

### 3: Drop SYN packets with suspicious MSS value ###
/sbin/iptables -t mangle -A PREROUTING -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP

### 4: Block packets with bogus TCP flags ###
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,ACK FIN -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,URG URG -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,PSH PSH -j DROP
/sbin/iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP

### 5: Block spoofed packets ###
/sbin/iptables -t mangle -A PREROUTING -s 224.0.0.0/3 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 169.254.0.0/16 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 172.16.0.0/12 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 192.0.2.0/24 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 192.168.0.0/16 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 10.0.0.0/8 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 0.0.0.0/8 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 240.0.0.0/5 -j DROP
/sbin/iptables -t mangle -A PREROUTING -s 127.0.0.0/8 ! -i lo -j DROP

### 6: Drop ICMP (you usually don't need this protocol) ###
/sbin/iptables -t mangle -A PREROUTING -p icmp -j DROP

### 7: Drop fragments in all chains ###
/sbin/iptables -t mangle -A PREROUTING -f -j DROP

### 8: Limit connections per source IP ###
/sbin/iptables -A INPUT -p tcp -m connlimit --connlimit-above 111 -j REJECT --reject-with tcp-reset

### 9: Limit RST packets ###
/sbin/iptables -A INPUT -p tcp --tcp-flags RST RST -m limit --limit 2/s --limit-burst 2 -j ACCEPT
/sbin/iptables -A INPUT -p tcp --tcp-flags RST RST -j DROP

### 10: Limit new TCP connections per second per source IP ###
/sbin/iptables -A INPUT -p tcp -m conntrack --ctstate NEW -m limit --limit 60/s --limit-burst 20 -j ACCEPT
/sbin/iptables -A INPUT -p tcp -m conntrack --ctstate NEW -j DROP

### 11: Use SYNPROXY on all ports (disables connection limiting rule) ###
# Hidden - unlock content above in "Mitigating SYN Floods With SYNPROXY" section
Bonus Rules
Here are some more iptables rules that are useful to increase the overall security of a Linux server:

### SSH brute-force protection ###
/sbin/iptables -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --set
/sbin/iptables -A INPUT -p tcp --dport ssh -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 -j DROP

### Protection against port scanning ###
/sbin/iptables -N port-scanning
/sbin/iptables -A port-scanning -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s --limit-burst 2 -j RETURN
/sbin/iptables -A port-scanning -j DROP


curl http://127.0.0.1:5000/users?rank=%27%20OR%201%20=%201%20-- ###trigger /users?rank=' OR 1 = 1 -- 

echo "
http://10.0.1.6/member/datareportfollows?key=
172.16.20.86:5000/users?rank=
"|parallel -j 4 -k ./sqlmap.py -a --batch --dbms Mysql -u {} 2>&1 |tee -a sqlmap.log :::


#root@host:~# lynis show commands

Commands:
lynis audit
lynis configure
lynis generate
lynis show
lynis update
lynis upload-only


###
https://www.sudo.ws/alerts/unescape_overflow.html
sudoedit -s '\' `perl -e 'print "A" x 65536'`
If you receive a usage or error message, sudo is not vulnerable. If the result is a Segmentation fault, sudo is vulnerable.

fix:
$ sudo yum update -y sudo.x86_64

###disable su cmd
https://www.cyberciti.biz/tips/restrict-the-use-of-su-command.html
$ vi /etc/pam.d/su
auth            required        /usr/lib64/security/pam_wheel.so use_uid

##visudo config
$ grep -v '#' /etc/sudoers|grep -v '^$'
Cmnd_Alias USERMGMT = /usr/sbin/usermod -s *, /sbin/usermod -s *, /usr/bin/tail -f /var/log/secure,\
/usr/bin/tail -f /var/log/mess*  ##only permit change login shell

Cmnd_Alias NETWORKING = /bin/firewall-cmd *, /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient, /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig, /sbin/mii-tool
Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum
Cmnd_Alias SERVICES = /bin/systemctl stop *, /bin/systemctl start *, /bin/systemctl status *, /bin/systemctl restart, /sbin/service, /sbin/chkconfig, /usr/bin/systemctl start, /usr/bin/systemctl stop, /usr/bin/systemctl reload, /usr/bin/systemctl restart, /usr/bin/systemctl status, /usr/bin/systemctl enable, /usr/bin/systemctl disable
Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall
Cmnd_Alias SYSLOG = /bin/cat /var/log/messages   ###allow dev group read
Defaults   !visiblepw
Defaults    always_set_home
Defaults    match_group_by_gid
Defaults    always_query_group_plugin
Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"
Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin
root    ALL=(ALL)       ALL
%wheel  ALL=(ALL)       ALL

#!!!here is key point grant specfic right for groups
%dev    ALL=SOFTWARE, SERVICES, PROCESSES, NETWORKING, SYSLOG, !/bin/systemctl stop auditd, !/bin/systemctl stop firewalld
%audit   ALL=USERMGMT, !/sbin/usermod root *, !/usr/sbin/usermod root *, !/usr/sbin/usermod * root, !/sbin/usermod * root

https://www.computernetworkingnotes.com/rhce-study-guide/etc-shadow-file-in-linux-explained-with-examples.html

Each line in /etc/shadow file represents an individual user account and contains following nine fields separated by colons (:).

1 Username
2 Encrypted password
3 Date of last password change
4 Minimum required days between password changes
5 Maximum allowed days between password changes
6 Number of days in advance to display password expiration message
7 Number of days after password expiration to disable the account
8 Account expiration date
9 Reserve field

1:    2                     :3:    4:5: 6 :7:8:9
John:$6$iTET...zoFzaMm.YwOl/:17707:0:90:14:::

Controlling Login
Linux does not support blank password in login process. Any user or service which does not have a valid password or have a blank password is not allowed to login. By setting a value other than an encrypted password, this field can be used to control the user login. For example, if the value (!) or (*) is stored in this field, the account will be locked and user or service will not be allowed to login.

Both characters (! and *) represent a blank password. The difference between both characters is that, the first character, the exclamation sign (!), is used for user accounts and the second character, the asterisk sign (*), is used for service accounts. If require, a user account can be unlocked by setting a password in this field through passwd command.



$sudo  cat /etc/pam.d/system-auth
#%PAM-1.0
auth        required      pam_tally2.so deny=5 even_deny_root unlock_time=60  ###key point
auth        required      pam_env.so
auth        sufficient    pam_fprintd.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 1000 quiet_success
auth        required      pam_deny.so

account     required      pam_tally2.so  ###key point
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 1000 quiet
account     required      pam_permit.so

password    required      pam_cracklib.so minclass=3   ###key point
password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1
password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok remember=5
password    required      pam_deny.so

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
-session    optional      pam_systemd.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so

# cat /etc/login.defs |grep -v '^$'|grep -v '#'
MAIL_DIR        /var/spool/mail
PASS_MAX_DAYS   99999            ####key point
PASS_MIN_DAYS   0
PASS_MIN_LEN    10                ####key point
PASS_WARN_AGE   7
UID_MIN                  1000
UID_MAX                 60000
SYS_UID_MIN               201
SYS_UID_MAX               999
GID_MIN                  1000
GID_MAX                 60000
SYS_GID_MIN               201
SYS_GID_MAX               999
CREATE_HOME     yes
UMASK           077
USERGROUPS_ENAB yes
ENCRYPT_METHOD SHA512 



####Windows server 2012 r2 install mse####
10 download mse for windows 
20 right click-->compatibility-->run thi program in compatibility mode for Windows 7
30 mseinstall.exe /disableoslimit


https://www.rootusers.com/how-to-install-microsoft-security-essentials-in-windows-server-2012-r2/

####Windows server 2012 r2 install mse####



#############dirty cow##############
10 verf
wget https://access.redhat.com/sites/default/files/rh-cve-2016-5195_1.sh
bash rh-cve-2016-5195_1.sh            ##########run as non-root user

20 update
## RHEL/CentOS 7 64-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
# rpm -ivh epel-release-latest-7.noarch.rpm

## RHEL/CentOS 6 32-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# rpm -ivh epel-release-6-8.noarch.rpm

## RHEL/CentOS 6 64-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# rpm -ivh epel-release-6-8.noarch.rpm

sudo yum update kernel -y
#############dirty cow##############
