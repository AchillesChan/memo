apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-web.fullname" . }}
  labels:
    {{- include "my-web.labels" . | nindent 4 }}
    app.kubernetes.io/role:  {{ .Values.custom_label.roleGroup }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "my-web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "my-web.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/role:  {{ .Values.custom_label.roleGroup }}
    spec:
      imagePullSecrets:
        - name: {{ .Release.Name }}-imagepullsecrets
#      {{- with .Values.imagePullSecrets }}
#      imagePullSecrets:
#        {{- toYaml . | nindent 8 }}
#      {{- end }}
      serviceAccountName: {{ include "my-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-my-server-my-web
          image: myhub.com/busybox:1.33
          command: ['sh', '-c', 'until nc -vz {{ .Release.Name }}-my-server 10051; do echo waiting for {{ .Release.Name }}-my-server 10051 port; sleep 2; done;']
        - name: init-my-server-my-db
          image: myhub.com/busybox:1.33
          command: ['sh', '-c', 'until nc -vz {{ .Release.Name }}-my-db 3306; do echo waiting for {{ .Release.Name }}-my-server 3306 port; sleep 2; done;']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            preStop:                                                                                                                              
              exec:
                command:
                - sh
                - -c
                - sleep 5
          env:
              - name: DB_SERVER_HOST
                value: {{ .Release.Name }}-my-db
              - name: MYSQL_USER
                value: zabbix
              - name: MYSQL_DATABAS
                value: zabbix 
              - name: MYSQL_PASSWORD
                value: zabbix
              - name: ZBX_SERVER_HOST
                value: {{ .Release.Name }}-my-server 
              - name: PHP_TZ
                value: Asia/Shanghai
              - name: MYSQL_ROOT_PASSWORD 
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-my-db 
                    key: ROOT_PASSWORD 
 
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
