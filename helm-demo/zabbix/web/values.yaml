# Default values for web.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 6 

image:
  repository: hub.com/zabbix-web-apache-mysql 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "4.4.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
custom_label:
    roleGroup: webGrp01        ###custom define label for affinity using

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  limits:         ###Guaranteed if limits eq requests
    cpu: 200m     ###Burstable if set limits and requests
    memory: 512Mi
  requests:       ###BestEffort if not set any limits and request
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true 
  minReplicas: 4
  maxReplicas: 9
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

#tolerations: []
tolerations:
  - key: projA              ###will schedule to node with kv:ProjA NoSchedule 
    effect: NoSchedule
    operator: Exists
  - key: env
    effect: NoSchedule
    operator: Exists
 
affinity: {}           ####take effect only if reschedule even delete/create?
affinity:
  podAffinity:                         ###will schedule to node with app.kubernetes.io/role=webGrp01 
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name  #####custom define on pod 
          operator: In 
          values:
          - server                   #####custom define on pod
      topologyKey: kubernetes.io/hostname    ####define on node
  podAntiAffinity:                ###will NOT schedule to node with app.kubernetes.io/name=server AND app.kubernetes.io/name=db
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
#        - key: app.kubernetes.io/name  ####pre-defined by cluster on pod 
#          operator: In 
#          values:
#          - server                     ####pre-defined by cluster on pod
        - key: app.kubernetes.io/name  ####the 2nd podAntiAffinity 
          operator: In 
          values:
          - db 
      topologyKey: kubernetes.io/hostname
